1) Write a shell that takes a valid directory name as an argument and recursively
descend all the subdirectories, finds the maximum length of any file in that hierarchy
and writes this maximum value to the standard output.
----------------------------------------------------------------------------------------
if [ $# -ne 1 ]
then
echo "no argument"
exit
fi
for i in $*
do
if [ -d $i ]
then
echo " large file size is "
else
echo " not a directory "
fi
done
echo `ls -Rl $1 | grep "^-" | tr -s ' ' | cut -d ' ' -f 5,9 | sort -n | tail -1`
----------------------------------------------------------------------------------------
output :
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 11.sh file
large file size is
250 f4.sh
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 11.sh aaa
not a directory
ls: cannot access 'aaa': No such file or directory
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 11.sh
no argument

----------------------------------------------------------------------------------------

2) Write a shell script that accepts two file names as arguments, checks if the
permissions for these files are identical and if the permission are identical, output
common permission and otherwise output each file name followed by its permissions.
----------------------------------------------------------------------------------------
if [ $# -ne 2 ]
then
echo "No arguments"
elif [ ! -e $1 -o ! -e $2 ]
then
echo "FIle does not exist"
else
p1=`ls -l $1|cut -c2-10`
p2=`ls -l $2|cut -c2-10`
if [ $p1 == $p2 ]
then
echo "File permissions are equal & is $p1"
else
echo "File permissions are not equal"
echo "1st file $p1"
echo "2nd file $p2"
fi
fi
----------------------------------------------------------------------------------------
output :
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 2.sh
no arguments
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 2.sh 3.sh 5.sh
file permissions are equal & is rw-r--r—
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 2.sh 3.sh 8.sh
file permissions are not equal
1st file rw-r--r--
2nd file rwxr--r--


----------------------------------------------------------------------------------------

3) Write a shell script that accept one or more filenames as argument and convert all of
them to uppercase, provided they exist in current directory.
----------------------------------------------------------------------------------------
for f in $*
do
if [ -e $f ]
then
cat $f|tr "[a-z]" "[A-Z]">tmp
mv tmp $f
else
echo "File $f does not exist"
fi
done
----------------------------------------------------------------------------------------

output :
Admin@DESKTOP-TRR2ACF ~/program/journal
$ cat awk.txt
electrical 34
mechanical 67
electrical 80
computer science 43
mechanical 65
civil 98
computer science 64
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 3.sh awk.txt
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ cat awk.txt
ELECTRICAL 34
MECHANICAL 67
ELECTRICAL 80
COMPUTER SCIENCE 43
MECHANICAL 65
CIVIL 98
COMPUTER SCIENCE 64


----------------------------------------------------------------------------------------

4) Write a shell script that works like the following commands.
----Wc
#Wordcount Without Using WC Command.
----------------------------------------------------------------------------------------
 if [ $# -eq 1 ]
 then
 exec < $1
 f=1
 fi
 echo " To Strating Write Below "
 no=0
 no1=0
 d=0
 p=0
while read line
do
no=`expr $no + 1`
d=`expr length "$line"`
p=`expr $p + $d`
set $line
no1=`expr $no1 + $#`
done
echo " "
echo "Number Of line;- $no"
echo "Number of Word:- $no1"
echo "NUmber of charcter $p"
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 4.sh awk.txt
----------------------------------------------------------------------------------------
To Strating Write Below
Number Of line;- 7
Number of Word:- 16
NUmber of charcter 106
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 4.sh 2.sh
----------------------------------------------------------------------------------------
To Strating Write Below
Number Of line;- 18
Number of Word:- 67
NUmber of charcter 293
----------------------------------------------------------------------------------------
-----head
-----Tail
#head Without Using head Command.
#tail Without Using tail Command.
----------------------------------------------------------------------------------------
echo enter fiename
read file
lines=$(< $file wc -l)
echo $lines lines in $file
echo enter no of line
read n
echo enter starting position
read m
t=$(expr $n + $m)
e=1
exec < $file
while read line
do
if [ $e -ge $m -a $e -lt $t ]
then
echo $line
fi
e=$(expr $e + 1)
done
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 4_2_3.sh
----------------------------------------------------------------------------------------
enter fiename
awk.txt
7 lines in awk.txt
enter no of line
3
enter starting position
6
civil 98
computer science 64

----------------------------------------------------------------------------------------

5) Write a shell script that counts the number of vowels, consonants, numbers and
special characters in the given string
----------------------------------------------------------------------------------------
echo Enter a text
read text
w=`echo $text | wc -w`
w=`expr $w`
c=`echo $text | wc -c`
c=`expr $c - 1`
s=0
alpha=0
j=` `
n=1
while [ $n -le $c ]
do
ch=`echo $text | cut -c $n`
if test $ch = $j
then
s=`expr $s + 1`
fi
case $ch in
a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z) alpha=`expr $alpha + 1`;;
esac
n=`expr $n + 1`
done
special=`expr $c - $s - $alpha`
echo Words=$w
echo Characters=$c
echo Spaces=$s
echo Special symbols=$special

----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 5.sh
----------------------------------------------------------------------------------------
Enter a text
khyati solanki 123
Words=3
Characters=18
Spaces=2
Special symbols=3


----------------------------------------------------------------------------------------
6) Write a shell script that accepts a string as command line argument and reverse the
string
----------------------------------------------------------------------------------------
str=$1
b=`echo $str|wc -c`
l=`expr $b - 1`
echo Lenght of String is $l
a=" "
for (( i=l ; i>0 ; i-- ))
do
c=`echo $str|cut -c $i`
a=$a$c
done
echo $a
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 6.sh
----------------------------------------------------------------------------------------
Lenght of String is 0
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 6.sh khyati solanki
----------------------------------------------------------------------------------------
Lenght of String is 6
itayhk
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sh 6.sh 123nnlijok
----------------------------------------------------------------------------------------
Lenght of String is 10
kojilnn321
----------------------------------------------------------------------------------------

7) Do as directed:
----------------------------------------------------------------------------------------
1. Display all the lines of a file that is 7characters long and starts with T and ends with
“?”.
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ grep -i 't.....?' emp.txt
----------------------------------------------------------------------------------------
Tdcssd?
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ cat emp.txt
----------------------------------------------------------------------------------------
mslamdlsed;leskf;welfwe
cscsdcsedcsedse
Tdcsdcs
Tdcssd?
cv bn hjmhujm
yufjmy?
cSEFwea
----------------------------------------------------------------------------------------
2. Display the names of files (only ordinary files) of the current directory.
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ ls -al | grep '^-'
----------------------------------------------------------------------------------------
-rw-r--r-- 1 Admin None 238 Aug 15 18:11 1.sh
-rw-r--r-- 1 Admin None 311 Aug 8 22:08 2.sh
-rw-r--r-- 1 Admin None 118 Aug 15 18:24 3.sh
-rw-r--r-- 1 Admin None 392 Aug 15 21:34 4.sh
-rw-r--r-- 1 Admin None 270 Aug 15 21:17 4_1.sh
-rw-r--r-- 1 Admin None 445 Aug 8 22:12 5.sh
-rw-r--r-- 1 Admin None 150 Aug 10 10:56 6.sh
-rwxr--r-- 1 Admin None 542 Aug 8 22:18 8.sh
-rwxr-xr-x 1 Admin None 65712 Jun 27 21:34 UNIX journal 2022-23.pdf
-rw-r--r-- 1 Admin None 119 Aug 15 18:22 awk.txt
-rwxr-xr-x 1 Admin None 91 Aug 16 15:00 emp.txt
-rw-r--r-- 1 Admin None 42 Aug 15 21:01 wc1.sh
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ ls -l
----------------------------------------------------------------------------------------
total 83
-rw-r--r-- 1 Admin None 238 Aug 15 18:11 1.sh
-rw-r--r-- 1 Admin None 311 Aug 8 22:08 2.sh
-rw-r--r-- 1 Admin None 118 Aug 15 18:24 3.sh
-rw-r--r-- 1 Admin None 392 Aug 15 21:34 4.sh
-rw-r--r-- 1 Admin None 270 Aug 15 21:17 4_1.sh
-rw-r--r-- 1 Admin None 445 Aug 8 22:12 5.sh
-rw-r--r-- 1 Admin None 150 Aug 10 10:56 6.sh
-rwxr--r-- 1 Admin None 542 Aug 8 22:18 8.sh
-rwxr-xr-x 1 Admin None 65712 Jun 27 21:34 'UNIX journal 2022-23.pdf'
-rw-r--r-- 1 Admin None 119 Aug 15 18:22 awk.txt
-rwxr-xr-x 1 Admin None 95 Aug 16 15:27 emp.txt
drwxr-xr-x 1 Admin None 0 Aug 15 18:05 file
drwxr-xr-x 1 Admin None 0 Aug 16 15:26 sub5
-rw-r--r-- 1 Admin None 42 Aug 15 21:01 wc1.sh
----------------------------------------------------------------------------------------
3. Display only blank lines with their line numbers.
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ cat > emp
----------------------------------------------------------------------------------------
hello
how are you 123 jojo
nklokpl[pl[l[l[l[];[][]p[]fvdfvfgbfg
sdvdfvd
cvd
vdfgvtsgrthtyhythtyjyujyujuy
fdrgrgrtghrththtyhjyujyuyuuykukuk
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ sed -n '/^$/=' emp
----------------------------------------------------------------------------------------
3
5
6
----------------------------------------------------------------------------------------
4. Write a sed command to append a blank line after each line of the file.
Ans:
----------------------------------------------------------------------------------------
khyati patel@DESKTOP-K9S7FLK ~/journal
$ cat > 4.sh
----------------------------------------------------------------------------------------
unix programming
unix shell programming
unix
----------------------------------------------------------------------------------------
khyati patel@DESKTOP-K9S7FLK ~/journal
$ sed 'a\ ' 4.sh
----------------------------------------------------------------------------------------
unix programming
unix shell programming
unix
----------------------------------------------------------------------------------------
5. Display 5th to 10th character of a file.
----------------------------------------------------------------------------------------
Ans: cut -c5-10 file
----------------------------------------------------------------------------------------
khyati patel@DESKTOP-K9S7FLK ~/journal
$ cat > file
----------------------------------------------------------------------------------------
khyati patel
unix programming
udhana college
unix shellprogramming
----------------------------------------------------------------------------------------
khyati patel@DESKTOP-K9S7FLK ~/journal
$ cut -c5-10 file
----------------------------------------------------------------------------------------
ti pat
progr
na col
shell

----------------------------------------------------------------------------------------

8) Write an awk script to find the length of the longest line present in the file
----------------------------------------------------------------------------------------
awk '{if (length($0)>max)max = length($0)}END{print max}' Filename.txt
----------------------------------------------------------------------------------------
Admin@DESKTOP-TRR2ACF ~/program/journal
$ awk '{if (length($0)>max)max = length($0)}END{print max}' 8.sh
----------------------------------------------------------------------------------------
49
